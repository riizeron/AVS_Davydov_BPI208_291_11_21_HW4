     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern fprintf
     4                                  
     5                                  extern RealComplex
     6                                  extern RealFraction
     7                                  extern RealPolar
     8                                  
     9                                  extern COMPLEX
    10                                  extern FRACTION
    11                                  extern POLAR
    12                                  
    13                                  ;----------------------------------------------
    14                                  ; Вывод параметров комплексного числа в файл
    15                                  ;----------------------------------------------
    16                                  global OutComplex
    17                                  OutComplex:
    18                                  section .data
    19 00000000 497420697320436F6D-         .outfmt db "It is Complex: x = %d, y = %d. Real = %g",10,0
    19 00000009 706C65783A2078203D-
    19 00000012 2025642C2079203D20-
    19 0000001B 25642E205265616C20-
    19 00000024 3D2025670A00       
    20                                  section .bss
    21 00000000 <res 00000008>              .pcomp  resq  1
    22 00000008 <res 00000008>              .FILE   resq  1       ; временное хранение указателя на файл
    23 00000010 <res 00000008>              .p      resq  1       ; вычисленное вещественного значение комплексного числа
    24                                  section .text
    25 00000000 55                      push rbp
    26 00000001 4889E5                  mov rbp, rsp
    27                                  
    28                                      ; Сохранени принятых аргументов
    29 00000004 48893C25[00000000]          mov     [.pcomp], rdi          ; сохраняется адрес комплексного чсила
    30 0000000C 48893425[08000000]          mov     [.FILE], rsi           ; сохраняется указатель на файл
    31                                  
    32                                      ; Вычисление вещественного значения копмдексного числа (адрес уже в rdi)
    33 00000014 E8(00000000)                call    RealComplex
    34 00000019 F20F110425-                 movsd   [.p], xmm0          ; сохранение (может лишнее) вещественного значения
    34 0000001E [10000000]         
    35                                  
    36                                      ; Вывод информации о комплексном числе в консоль
    37                                  ;     mov     rdi, .outfmt        ; Формат - 1-й аргумент
    38                                  ;     mov     rax, [.pcomp]       ; адрес косплексного числа
    39                                  ;     mov     esi, [rax]          ; x
    40                                  ;     mov     edx, [rax+4]        ; y
    41                                  ;     movsd   xmm0, [.p]
    42                                  ;     mov     rax, 1              ; есть числа с плавающей точкой
    43                                  ;     call    printf
    44                                  
    45                                      ; Вывод информации о комплексном числе в файл
    46 00000022 488B3C25[08000000]          mov     rdi, [.FILE]
    47 0000002A 48BE-                       mov     rsi, .outfmt        ; Формат - 2-й аргумент
    47 0000002C [0000000000000000] 
    48 00000034 488B0425[00000000]          mov     rax, [.pcomp]       ; адрес комплексного числа
    49 0000003C 8B10                        mov     edx, [rax]          ; x
    50 0000003E 8B4804                      mov     ecx, [rax+4]        ; y
    51 00000041 F20F100425-                 movsd   xmm0, [.p]
    51 00000046 [10000000]         
    52 0000004A B801000000                  mov     rax, 1              ; есть числа с плавающей точкой
    53 0000004F E8(00000000)                call    fprintf
    54                                  
    55 00000054 C9                      leave
    56 00000055 C3                      ret
    57                                  
    58                                  ;----------------------------------------------
    59                                  ; Вывод параметров дроби в файл
    60                                  ;----------------------------------------------
    61                                  global OutFraction
    62                                  OutFraction:
    63                                  section .data
    64 0000002A 497420697320467261-         .outfmt db "It is Fraction: a = %d, b = %d. Real = %g",10,0
    64 00000033 6374696F6E3A206120-
    64 0000003C 3D2025642C2062203D-
    64 00000045 2025642E205265616C-
    64 0000004E 203D2025670A00     
    65                                  section .bss
    66 00000018 <res 00000008>              .pfrac  resq  1
    67 00000020 <res 00000008>              .FILE   resq  1       ; временное хранение указателя на файл
    68 00000028 <res 00000008>              .p      resq  1       ; вычисленное вещественное значение дроби
    69                                  section .text
    70 00000056 55                      push rbp
    71 00000057 4889E5                  mov rbp, rsp
    72                                  
    73                                      ; Сохранени принятых аргументов
    74 0000005A 48893C25[18000000]          mov     [.pfrac], rdi         ; сохраняется адрес дроби
    75 00000062 48893425[20000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    76                                  
    77                                      ; Вычисление вещественного значения дроби (адрес уже в rdi)
    78 0000006A E8(00000000)                call    RealFraction
    79 0000006F F20F110425-                 movsd   [.p], xmm0          ; сохранение (может лишнее) вещественного значения
    79 00000074 [28000000]         
    80                                  
    81                                      ; Вывод информации о дроби в консоль
    82                                  ;     mov     rdi, .outfmt        ; Формат - 1-й аргумент
    83                                  ;     mov     rax, [.pfrac]       ; адрес треугольника
    84                                  ;     mov     esi, [rax]          ; числитель
    85                                  ;     mov     edx, [rax+4]        ; знаменатель
    86                                  ;     movsd   xmm0, [.p]
    87                                  ;     mov     rax, 1              ; есть числа с плавающей точкой
    88                                  ;     call    printf
    89                                  
    90                                      ; Вывод информации о дроби в файл
    91 00000078 488B3C25[20000000]          mov     rdi, [.FILE]
    92 00000080 48BE-                       mov     rsi, .outfmt        ; Формат - 2-й аргумент
    92 00000082 [2A00000000000000] 
    93 0000008A 488B0425[18000000]          mov     rax, [.pfrac]       ; адрес дроби
    94 00000092 8B10                        mov     edx, [rax]          ; числитель
    95 00000094 8B4804                      mov     ecx, [rax+4]        ; знаменатель
    96 00000097 F20F100425-                 movsd   xmm0, [.p]
    96 0000009C [28000000]         
    97 000000A0 B801000000                  mov     rax, 1              ; есть числа с плавающей точкой
    98 000000A5 E8(00000000)                call    fprintf
    99                                  
   100 000000AA C9                      leave
   101 000000AB C3                      ret
   102                                  
   103                                  ;----------------------------------------------
   104                                  ; Вывод параметров полярной координаты в файл
   105                                  ;----------------------------------------------
   106                                  global OutPolar
   107                                  OutPolar:
   108                                  section .data
   109 00000055 497420697320506F6C-         .outfmt db "It is Polar: r = %d, phi = %d. Real = %g",10,0
   109 0000005E 61723A2072203D2025-
   109 00000067 642C20706869203D20-
   109 00000070 25642E205265616C20-
   109 00000079 3D2025670A00       
   110                                  section .bss
   111 00000030 <res 00000008>              .ppol  resq  1
   112 00000038 <res 00000008>              .FILE   resq  1       ; временное хранение указателя на файл
   113 00000040 <res 00000008>              .p      resq  1       ; вычисленное вещественное значение полярной координаты
   114                                  section .text
   115 000000AC 55                      push rbp
   116 000000AD 4889E5                  mov rbp, rsp
   117                                  
   118                                      ; Сохранени принятых аргументов
   119 000000B0 48893C25[30000000]          mov     [.ppol], rdi          ; сохраняется адрес полярной координаты
   120 000000B8 48893425[38000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
   121                                  
   122                                      ; Вычисление вещественного значения полярной координаты (адрес уже в rdi)
   123 000000C0 E8(00000000)                call    RealPolar
   124 000000C5 F20F110425-                 movsd   [.p], xmm0          ; сохранение (может лишнее) вещественного значения
   124 000000CA [40000000]         
   125                                  
   126                                      ; Вывод информации о полярной координате в консоль
   127                                  ;     mov     rdi, .outfmt        ; Формат - 1-й аргумент
   128                                  ;     mov     rax, [.ppol]        ; адрес треугольника
   129                                  ;     mov     esi, [rax]          ; r
   130                                  ;     mov     edx, [rax+4]        ; phi
   131                                  ;     movsd   xmm0, [.p]
   132                                  ;     mov     rax, 1              ; есть числа с плавающей точкой
   133                                  ;     call    printf
   134                                  
   135                                      ; Вывод информации о полярной координате в файл
   136 000000CE 488B3C25[38000000]          mov     rdi, [.FILE]
   137 000000D6 48BE-                       mov     rsi, .outfmt        ; Формат - 2-й аргумент
   137 000000D8 [5500000000000000] 
   138 000000E0 488B0425[30000000]          mov     rax, [.ppol]        ; адрес треугольника
   139 000000E8 8B10                        mov     edx, [rax]          ; r
   140 000000EA 8B4804                      mov     ecx, [rax+4]        ; phi
   141 000000ED F20F100425-                 movsd   xmm0, [.p]
   141 000000F2 [40000000]         
   142 000000F6 B801000000                  mov     rax, 1              ; есть числа с плавающей точкой
   143 000000FB E8(00000000)                call    fprintf
   144                                  
   145 00000100 C9                      leave
   146 00000101 C3                      ret
   147                                  
   148                                  ;----------------------------------------------
   149                                  ; Вывод параметров текущего числа в файл
   150                                  ;----------------------------------------------
   151                                  global OutNumber
   152                                  OutNumber:
   153                                  section .data
   154 0000007F 25643A2000                  .outfmt  db "%d: ", 0
   155 00000084 496E636F7272656374-         .erNumber db "Incorrect number!",10,0
   155 0000008D 206E756D626572210A-
   155 00000096 00                 
   156                                  section .bss
   157 00000048 <res 00000008>              .numNumber  resq   1
   158 00000050 <res 00000008>              .pnum       resq   1
   159 00000058 <res 00000008>              .FILE       resq   1
   160                                  section .text
   161 00000102 55                      push rbp
   162 00000103 4889E5                  mov rbp, rsp
   163                                  
   164 00000106 48891425[48000000]          mov [.numNumber], rdx
   165 0000010E 48893C25[50000000]          mov [.pnum], rdi
   166 00000116 48893425[58000000]          mov [.FILE], rsi
   167                                  
   168                                      ; В rdi адрес фигуры
   169 0000011E 8B07                        mov eax, [rdi]
   170 00000120 3B0425[00000000]            cmp eax, [COMPLEX]
   171 00000127 742F                        je .compOut
   172 00000129 3B0425[00000000]            cmp eax, [FRACTION]
   173 00000130 7470                        je .fracOut
   174 00000132 3B0425[00000000]            cmp eax, [POLAR]
   175 00000139 0F84A8000000                je .polOut
   176 0000013F 48BF-                       mov rdi, .erNumber
   176 00000141 [8400000000000000] 
   177 00000149 B800000000                  mov rax, 0
   178 0000014E BAFFFFFFFF                  mov edx, -1
   179                                      ;call fprintf
   180 00000153 E9D2000000                  jmp  .return
   181                                  .compOut:
   182 00000158 488B3C25[58000000]          mov rdi, [.FILE]
   183 00000160 48BE-                       mov rsi, .outfmt
   183 00000162 [7F00000000000000] 
   184 0000016A 488B1425[48000000]          mov rdx, [.numNumber]
   185 00000172 4831C0                      xor rax, rax
   186 00000175 E8(00000000)                call fprintf
   187                                  
   188 0000017A 488B3425[58000000]          mov rsi, [.FILE]
   189 00000182 488B3C25[50000000]          mov rdi, [.pnum]
   190                                  
   191                                      ; Вывод комплексного числа
   192 0000018A 4883C704                    add     rdi, 4
   193 0000018E FFC2                        inc edx
   194 00000190 48891425[48000000]          mov [.numNumber], rdx
   195                                  
   196 00000198 E863FEFFFF                  call    OutComplex
   197 0000019D E988000000                  jmp     .return
   198                                  .fracOut:
   199 000001A2 488B3C25[58000000]          mov rdi, [.FILE]
   200 000001AA 48BE-                       mov rsi, .outfmt
   200 000001AC [7F00000000000000] 
   201 000001B4 8B1425[48000000]            mov edx, [.numNumber]
   202 000001BB 4831C0                      xor rax, rax
   203 000001BE E8(00000000)                call fprintf
   204                                  
   205 000001C3 488B3425[58000000]          mov rsi, [.FILE]
   206 000001CB 488B3C25[50000000]          mov rdi, [.pnum]
   207                                      ; Вывод дроби
   208 000001D3 4883C704                    add     rdi, 4
   209 000001D7 FFC2                        inc edx
   210 000001D9 891425[48000000]            mov [.numNumber], edx
   211 000001E0 E871FEFFFF                  call    OutFraction
   212 000001E5 EB43                        jmp     .return
   213                                  .polOut:
   214 000001E7 488B3C25[58000000]          mov rdi, [.FILE]
   215 000001EF 48BE-                       mov rsi, .outfmt
   215 000001F1 [7F00000000000000] 
   216 000001F9 8B1425[48000000]            mov edx, [.numNumber]
   217 00000200 4831C0                      xor rax, rax
   218 00000203 E8(00000000)                call fprintf
   219                                  
   220 00000208 488B3425[58000000]          mov rsi, [.FILE]
   221 00000210 488B3C25[50000000]          mov rdi, [.pnum]
   222                                  
   223                                      ; Вывод полярной координаты
   224 00000218 4883C704                    add     rdi, 4
   225 0000021C FFC2                        inc edx
   226 0000021E 891425[48000000]            mov [.numNumber], edx
   227 00000225 E882FEFFFF                  call    OutPolar
   228                                  .return:
   229 0000022A C9                      leave
   230 0000022B C3                      ret
   231                                  
   232                                  ;----------------------------------------------
   233                                  ;  Вывод содержимого контейнера в файл
   234                                  ;----------------------------------------------
   235                                  global OutContainer
   236                                  OutContainer:
   237                                  section .data
   238 00000097 25643A2000                  .numFmt  db  "%d: ",0
   239                                  section .bss
   240 00000060 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   241 00000068 <res 00000004>              .len    resd    1   ; адрес для сохранения числа введенных элементов
   242 0000006C <res 00000008>              .FILE   resq    1   ; указатель на файл
   243                                  section .text
   244 0000022C 55                      push rbp
   245 0000022D 4889E5                  mov rbp, rsp
   246                                  
   247 00000230 48893C25[60000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   248 00000238 893425[68000000]            mov [.len],   esi     ; сохраняется число элементов
   249 0000023F 48891425[6C000000]          mov [.FILE],  rdx    ; сохраняется указатель на файл
   250                                  
   251                                      ; В rdi адрес начала контейнера
   252 00000247 4889F3                      mov rbx, rsi            ; число чисел
   253 0000024A 31C9                        xor ecx, ecx            ; счетчик чисел = 0
   254 0000024C 31D2                        xor edx, edx
   255 0000024E 4889D6                      mov rsi, rdx            ; перенос указателя на файл
   256                                  .loop:
   257 00000251 39D9                        cmp ecx, ebx            ; проверка на окончание цикла
   258 00000253 7D3C                        jge .return             ; Перебрали все числа
   259 00000255 53                          push rbx
   260 00000256 51                          push rcx
   261                                  
   262                                      ; Вывод текущей фигуры
   263 00000257 89CA                        mov     edx, ecx
   264 00000259 488B3C25[60000000]          mov     rdi, [.pcont]
   265 00000261 488B3425[6C000000]          mov     rsi, [.FILE]
   266 00000269 E894FEFFFF                  call OutNumber     ; Получение вещественного значения
   267                                  
   268 0000026E 59                          pop rcx
   269 0000026F 5B                          pop rbx
   270 00000270 83FAFF                      cmp edx, -1
   271 00000273 7406                        je .nextNumber
   272 00000275 EB00                        jmp .incIndex
   273                                  .incIndex:
   274 00000277 FFC1                        inc ecx                 ; индекс следующего числа
   275 00000279 EB00                        jmp .nextNumber
   276                                  .nextNumber:
   277 0000027B 488B0425[60000000]          mov     rax, [.pcont]
   278 00000283 4883C020                    add     rax, 32         ; адрес следующего числа
   279 00000287 48890425[60000000]          mov     [.pcont], rax
   280 0000028F EBC0                        jmp .loop
   281                                  .return:
   282 00000291 C9                      leave
   283 00000292 C3                      ret
