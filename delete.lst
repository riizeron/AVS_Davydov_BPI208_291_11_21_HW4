     1                                  extern RealNumber
     2                                  
     3                                  extern COMPLEX
     4                                  extern FRACTION
     5                                  extern POLAR
     6                                  
     7                                  %include "macros.mac"
     1                              <1> ; macros.mac - файл с макроопределениями
     2                              <1> 
     3                              <1> extern  fopen
     4                              <1> extern  fscanf
     5                              <1> extern  fclose
     6                              <1> extern  fprintf
     7                              <1> extern  printf
     8                              <1> extern  stdout
     9                              <1> extern  time
    10                              <1> extern  srand
    11                              <1> extern  strcmp
    12                              <1> extern  atoi
    13                              <1> extern  clock
    14                              <1> 
    15                              <1> extern  InContainer
    16                              <1> extern  InRndContainer
    17                              <1> extern  OutContainer
    18                              <1> extern  ContainerRealAverage
    19                              <1> 
    20                              <1> ;-------------------------------------------------------------
    21                              <1> ; Вывод строки символов из буфера
    22                              <1> %macro	PrintStrBuf 2
    23                              <1>         mov rdi, %2
    24                              <1>         mov rsi, %1
    25                              <1>         xor rax, rax
    26                              <1>         call fprintf
    27                              <1> %endmacro
    28                              <1> 
    29                              <1> ;-------------------------------------------------------------
    30                              <1> ; Вывод строки, передаваемой непосредственно макросу
    31                              <1> %macro  PrintStr    2
    32                              <1>     section .data
    33                              <1>         %%arg1  db  %1,0        ; first argument
    34                              <1>     section .text               ; the printf arguments
    35                              <1>         mov rdi, %2
    36                              <1>         mov rsi, %%arg1
    37                              <1>         mov rax, 0              ; no floating point
    38                              <1>         call fprintf
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> ;-------------------------------------------------------------
    42                              <1> ; Вывод строки, передаваемой непосредственно макросу
    43                              <1> ; с переводом на следующую строку
    44                              <1> %macro  PrintStrLn    2
    45                              <1>     section .data
    46                              <1>         %%arg1  db  %1,10,0     ; first argument
    47                              <1>     section .text               ; the printf arguments
    48                              <1>         mov rdi, %2
    49                              <1>         mov rsi, %%arg1
    50                              <1>         mov rax, 0              ; no floating point
    51                              <1>         call fprintf
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;-------------------------------------------------------------
    55                              <1> ; Вывод целого числа
    56                              <1> %macro  PrintInt    2
    57                              <1>     section .data
    58                              <1>         %%arg1  db  "%d",0     ; first argument
    59                              <1>     section .text               ; the printf arguments
    60                              <1>         mov rdi, %2
    61                              <1>         mov rsi, %%arg1
    62                              <1>         mov rdx, %1
    63                              <1>         mov rax, 0              ; no floating point
    64                              <1>         call fprintf
    65                              <1> %endmacro
    66                              <1> 
    67                              <1> ;-------------------------------------------------------------
    68                              <1> ; Вывод 64-разрядного беззнакового целого числа
    69                              <1> %macro  PrintLLUns    2
    70                              <1>     section .data
    71                              <1>         %%arg1  db  "%llu",0     ; first argument
    72                              <1>     section .text               ; the printf arguments
    73                              <1>         mov rdi, %2
    74                              <1>         mov rsi, %%arg1
    75                              <1>         mov rdx, %1
    76                              <1>         mov rax, 0              ; no floating point
    77                              <1>         call fprintf
    78                              <1> %endmacro
    79                              <1> 
    80                              <1> ;-------------------------------------------------------------
    81                              <1> ; Вывод действительного числа двойной точности
    82                              <1> %macro  PrintDouble    2
    83                              <1>     section .data
    84                              <1>         %%arg1  db  "%lg",0     ; first argument
    85                              <1>     section .text               ; the printf arguments
    86                              <1>         mov rdi, %2
    87                              <1>         mov rsi, %%arg1
    88                              <1>         movsd xmm0, %1
    89                              <1>         mov rax, 1              ; no floating point
    90                              <1>         call fprintf
    91                              <1> %endmacro
    92                              <1> 
    93                              <1> ;-------------------------------------------------------------
    94                              <1> ; Вывод содержимого контейнера
    95                              <1> %macro  PrintContainer    3
    96                              <1>     mov     rdi, %1
    97                              <1>     mov     esi, %2
    98                              <1>     mov     rdx, %3
    99                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
   100                              <1>     call    OutContainer
   101                              <1> %endmacro
   102                              <1> 
   103                              <1> ;-------------------------------------------------------------
   104                              <1> ; Вычисление суммы вещественных значений чисел в контейнере
   105                              <1> %macro  ContainerAverage    3
   106                              <1>     mov     rdi, %1
   107                              <1>     mov     rsi, %2
   108                              <1>     call    ContainerRealAverage
   109                              <1>     movsd   %3, xmm0
   110                              <1> %endmacro
   111                              <1> 
   112                              <1> ;-------------------------------------------------------------
   113                              <1> ; Удаление чисел контейнера
   114                              <1> %macro  DeleteContainerNumbers    3
   115                              <1>     mov     rdi, %1
   116                              <1>     mov     rsi, %2
   117                              <1>     movsd   xmm0, %3
   118                              <1>     call    DeleteContainerElements
   119                              <1> %endmacro
   120                              <1> 
   121                              <1> ;-------------------------------------------------------------
   122                              <1> ; Открытие файла для чтения, записи
   123                              <1> %macro  FileOpen   3
   124                              <1>     section .data
   125                              <1>         %%rw  db  %2,0          ; признак доступа
   126                              <1>     section .text               ; the printf arguments
   127                              <1>         mov     rdi, %1         ; адрес строки открываемого файла
   128                              <1>         mov     rsi, %%rw       ; строка определяющая чтение-запись. Задается явно
   129                              <1>         ; Или аналог:
   130                              <1>         ;lea     rsi, [%%rw]    ; строка определяющая чтение-запись. Задается явно
   131                              <1>         mov     rax, 0          ; нет чисел с плавающей точкой
   132                              <1>         call    fopen
   133                              <1>         mov     [%3], rax
   134                              <1> %endmacro
   135                              <1> 
   136                              <1> ;-------------------------------------------------------------
   137                              <1> ; Закрытие открытого файла
   138                              <1> %macro  FileClose   1
   139                              <1>     mov     rdi, %1             ; передача указателя на закрываемый файл
   140                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
   141                              <1>     call    fclose
   142                              <1> %endmacro
   143                              <1> 
     8                                  
     9                                  global DeleteContainerElements
    10                                  DeleteContainerElements:
    11                                  section .data
    12 00000000 0000000000002440            .ten   dq  10.0
    13                                  section .bss
    14 00000000 <res 00000008>              .pcontainer         resq    1   ; адрес контейнера
    15 00000008 <res 00000008>              .length             resq    1   ; адрес для сохранения числа введенных элементов
    16 00000010 <res 00000008>              .averageReal        resq    1   ; 
    17 00000018 <res 00000008>              .real               resq    1   ; вычисленная вещественная часть
    18 00000020 <res 00000008>              .newContainer       resq    1   ;
    19 00000028 <res 00000008>              .newLength          resq    1   ; 
    20                                  section .text
    21 00000000 55                      push rbp
    22 00000001 4889E5                  mov rbp, rsp
    23                                  
    24 00000004 48893C25[00000000]          mov     [.pcontainer], rdi          ; сохраняется указатель на контейнер
    25 0000000C 893425[08000000]            mov     [.length], esi              ; сохраняется число элементов
    26 00000013 F20F110425-                 movsd   [.averageReal], xmm0        ; сохраняется указатель на среднее арифметическое вещественных значений
    26 00000018 [10000000]         
    27                                  
    28                                      ; В rdi адрес начала контейнера
    29 0000001C 89F3                        mov     ebx, esi        ; число цифр
    30 0000001E 31C9                        xor     ecx, ecx        ; счетчик цифр
    31                                  
    32 00000020 4831F6                      xor     rsi, rsi
    33 00000023 48891425[20000000]          mov     [.newContainer], rdx
    34 0000002B 48893425[28000000]          mov     [.newLength], rsi
    35                                  
    36                                  .loop:
    37 00000033 39D9                        cmp     ecx, ebx        ; проверка на окончание цикла
    38 00000035 7D7A                        jge     .return         ; перебрали все цифры
    39                                  
    40 00000037 53                          push rbx
    41 00000038 51                          push rcx
    42                                  
    43 00000039 4989FA                      mov     r10, rdi                    ; сохранение начала цифры
    44 0000003C 488B3C25[00000000]          mov     rdi, [.pcontainer]
    45 00000044 E8(00000000)                call    RealNumber                  ; получение вещественного значения числа
    46 00000049 F20F110425-                 movsd   [.real], xmm0               ; сохранение вещественного значения
    46 0000004E [18000000]         
    47 00000052 F20F5C0425-                 subsd   xmm0, [.averageReal]        ; находим разницу вещественного значения числа и среднего вещественного значения всех фигур
    47 00000057 [10000000]         
    48 0000005B F20F590425-                 mulsd   xmm0, [.ten]                ; умножаем на 10, чтобы точно была ненулевая целая часть
    48 00000060 [00000000]         
    49 00000064 F20F2DC0                    cvtsd2si eax, xmm0                  ; берём целую часть от разницы вещественных значений
    50                                  
    51 00000068 83F800                      cmp     eax, 0                      ; если вещественное значение больше 0, то добавляем цифру                       
    52 0000006B 7C1C                        jl     .delete
    53 0000006D EB2D                        jmp    .countNewLength
    54                                  
    55                                  .nextNumber:
    56 0000006F 59                          pop rcx
    57 00000070 5B                          pop rbx
    58 00000071 FFC1                        inc ecx
    59                                  
    60 00000073 488B3C25[00000000]          mov rdi, [.pcontainer]
    61 0000007B 4883C720                    add rdi, 32             ; адрес следующей цифры
    62 0000007F 48893C25[00000000]          mov [.pcontainer], rdi
    63 00000087 EBAA                        jmp .loop
    64                                  
    65                                  .delete:
    66 00000089 8B3C25[00000000]            mov edi, [.pcontainer]
    67 00000090 678D47FC                    lea eax, [edi-4]
    68 00000094 678907                      mov [edi], eax          ; удаление
    69 00000097 83C704                      add edi, 4
    70 0000009A EBD3                        jmp .nextNumber
    71                                  
    72                                  .countNewLength:
    73 0000009C 488B3425[28000000]          mov rsi, [.newLength]
    74 000000A4 48FFC6                      inc rsi
    75 000000A7 48893425[28000000]          mov [.newLength], rsi
    76 000000AF EBBE                        jmp .nextNumber
    77                                  
    78                                  .return:
    79 000000B1 488B3425[28000000]          mov rsi, [.newLength]
    80                                      
    81 000000B9 C9                      leave
    82 000000BA C3                      ret
